An error occurred while executing the following cell:
------------------
sngp_pred_train = train_and_test_sngp(np.array(X_train), np.array(X_train))
------------------

---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
/tmp/ipykernel_4184/3946251102.py in <module>
----> 1 sngp_pred_train = train_and_test_sngp(np.array(X_train), np.array(X_train))

/tmp/ipykernel_4184/3178864071.py in train_and_test_sngp(X_train, X_test)
      3 
      4     sngp_model.compile(**train_config)
----> 5     sngp_model.fit(X_train, np.array(y_train), verbose=0, **fit_config)
      6 
      7     sngp_logits, sngp_covmat = sngp_model(X_test, return_covmat=True)

/tmp/ipykernel_4184/3636043544.py in fit(self, *args, **kwargs)
      5         kwargs["callbacks"].append(ResetCovarianceCallback())
      6 
----> 7         return super().fit(*args, **kwargs)

~/miniconda3/envs/py37/lib/python3.7/site-packages/keras/utils/traceback_utils.py in error_handler(*args, **kwargs)
     68             # To get the full stack trace, call:
     69             # `tf.debugging.disable_traceback_filtering()`
---> 70             raise e.with_traceback(filtered_tb) from None
     71         finally:
     72             del filtered_tb

~/miniconda3/envs/py37/lib/python3.7/site-packages/keras/engine/training.py in tf__train_function(iterator)
     13                 try:
     14                     do_return = True
---> 15                     retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)
     16                 except:
     17                     do_return = False

KeyError: in user code:

    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/engine/training.py", line 1249, in train_function  *
        return step_function(self, iterator)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/engine/training.py", line 1233, in step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/engine/training.py", line 1222, in run_step  **
        outputs = model.train_step(data)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/engine/training.py", line 1027, in train_step
        self.optimizer.minimize(loss, self.trainable_variables, tape=tape)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 527, in minimize
        self.apply_gradients(grads_and_vars)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 1140, in apply_gradients
        return super().apply_gradients(grads_and_vars, name=name)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 634, in apply_gradients
        iteration = self._internal_apply_gradients(grads_and_vars)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 1169, in _internal_apply_gradients
        grads_and_vars,
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 1217, in _distributed_apply_gradients_fn
        var, apply_grad_to_update_var, args=(grad,), group=False
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 1213, in apply_grad_to_update_var  **
        return self._update_step(grad, var)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 217, in _update_step
        f"The optimizer cannot recognize variable {variable.name}. "

    KeyError: 'The optimizer cannot recognize variable deep_res_net_sngp_with_cov_reset_1/spectral_normalization_6/kernel:0. This usually means you are trying to call the optimizer to update different parts of the model separately. Please call `optimizer.build(variables)` with the full list of trainable variables before the training loop or use legacy optimizer `tf.keras.optimizers.legacy.{self.__class__.__name__}.'

KeyError: in user code:

    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/engine/training.py", line 1249, in train_function  *
        return step_function(self, iterator)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/engine/training.py", line 1233, in step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/engine/training.py", line 1222, in run_step  **
        outputs = model.train_step(data)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/engine/training.py", line 1027, in train_step
        self.optimizer.minimize(loss, self.trainable_variables, tape=tape)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 527, in minimize
        self.apply_gradients(grads_and_vars)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 1140, in apply_gradients
        return super().apply_gradients(grads_and_vars, name=name)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 634, in apply_gradients
        iteration = self._internal_apply_gradients(grads_and_vars)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 1169, in _internal_apply_gradients
        grads_and_vars,
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 1217, in _distributed_apply_gradients_fn
        var, apply_grad_to_update_var, args=(grad,), group=False
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 1213, in apply_grad_to_update_var  **
        return self._update_step(grad, var)
    File "/github/home/miniconda3/envs/py37/lib/python3.7/site-packages/keras/optimizers/optimizer_experimental/optimizer.py", line 217, in _update_step
        f"The optimizer cannot recognize variable {variable.name}. "

    KeyError: 'The optimizer cannot recognize variable deep_res_net_sngp_with_cov_reset_1/spectral_normalization_6/kernel:0. This usually means you are trying to call the optimizer to update different parts of the model separately. Please call `optimizer.build(variables)` with the full list of trainable variables before the training loop or use legacy optimizer `tf.keras.optimizers.legacy.{self.__class__.__name__}.'

